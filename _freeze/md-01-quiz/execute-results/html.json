{
  "hash": "40df97cb7d49653adf342f34205a8e56",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module 1 Quiz: Quarto Basics for openwashdata\"\nformat: live-html\nengine: knitr\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## Introduction\n\nThis quiz tests your understanding of Quarto basics for openwashdata package documentation. The quiz covers YAML headers, code chunks, and data analysis integration.\n\n## Section 1: Quarto Fundamentals\n\n### Question 1: YAML Header\n\nWhich of the following is the correct YAML header for an openwashdata package README?\n\n\n\n::: {.cell exercise='yaml_question'}\n```{webr}\n#| exercise: yaml_question\n# Multiple choice question\n# Select the correct YAML header format\n```\n:::\n\n\n\n::: {.callout-note}\n## Hint\nThink about what output format is typically used for GitHub README files.\n:::\n\n<details>\n<summary>Solution</summary>\nThe correct YAML header for a README.qmd file is:\n```yaml\n---\noutput: github_document\n---\n```\n</details>\n\n### Question 2: pkgdown Configuration\n\nWhat file is used to configure the pkgdown website for an openwashdata package?\n\n\n\n::: {.cell exercise='pkgdown_config'}\n```{webr}\n#| exercise: pkgdown_config\n# Write your answer as a string\nanswer <- \"_____\"\nprint(answer)\n```\n:::\n\n\n\n::: {.callout-note}\n## Hint\nThe configuration file starts with an underscore and has a .yml extension.\n:::\n\n<details>\n<summary>Solution</summary>\n```r\nanswer <- \"_pkgdown.yml\"\n```\n</details>\n\n## Section 2: Code Chunks and Options\n\n### Question 3: Code Chunk Options\n\nCreate a code chunk that loads the tidyverse package but hides both the code and any messages:\n\n\n\n::: {.cell exercise='chunk_options'}\n```{webr}\n#| exercise: chunk_options\n# Load tidyverse with appropriate chunk options\n# Use the code chunk option comments to specify hiding code and messages\n```\n:::\n\n\n\n::: {.callout-note}\n## Hint\nIn Quarto, you can use `#| include: false` to hide both code and output, or `#| echo: false` and `#| message: false` separately.\n:::\n\n<details>\n<summary>Solution</summary>\n```r\n#| echo: false\n#| message: false\nlibrary(tidyverse)\n```\n</details>\n\n### Question 4: Creating Tables\n\nUse the gapminder dataset to create a summary table showing the average life expectancy by continent in 2007:\n\n\n\n::: {.cell exercise='create_table'}\n```{webr}\n#| exercise: create_table\nlibrary(tidyverse)\nlibrary(gapminder)\n\n# Create a summary table of average life expectancy by continent for 2007\n# Your code here\n```\n:::\n\n\n\n::: {.callout-note}\n## Hint\n1. Filter the data for year 2007\n2. Group by continent\n3. Summarize to calculate mean life expectancy\n4. You can use `knitr::kable()` to format the table nicely\n:::\n\n<details>\n<summary>Solution</summary>\n```r\ngapminder %>%\n  filter(year == 2007) %>%\n  group_by(continent) %>%\n  summarise(avg_life_exp = mean(lifeExp)) %>%\n  knitr::kable(digits = 1)\n```\n</details>\n\n## Section 3: Data Analysis Integration\n\n### Question 5: Inline Code\n\nCalculate the mean GDP per capita for Switzerland in 2007 and display it using inline code:\n\n\n\n::: {.cell exercise='inline_code'}\n```{webr}\n#| exercise: inline_code\nlibrary(gapminder)\n\n# Calculate Switzerland's GDP per capita in 2007\nswiss_gdp_2007 <- gapminder %>%\n  filter(country == \"Switzerland\", year == 2007) %>%\n  pull(gdpPercap)\n\n# Display the result\npaste(\"Switzerland's GDP per capita in 2007 was $\", \n      format(swiss_gdp_2007, big.mark = \",\"), sep = \"\")\n```\n:::\n\n\n\n### Question 6: Data Visualization\n\nCreate a line plot showing the life expectancy over time for African countries with a population greater than 30 million in 2007:\n\n\n\n::: {.cell exercise='visualization'}\n```{webr}\n#| exercise: visualization\nlibrary(tidyverse)\nlibrary(gapminder)\n\n# First, identify African countries with population > 30 million in 2007\nlarge_african_countries <- gapminder %>%\n  filter(continent == \"Africa\", year == 2007, pop > 30000000) %>%\n  pull(country)\n\n# Create the plot\n# Your code here\n```\n:::\n\n\n\n::: {.callout-note}\n## Hint\n1. Filter for the countries identified above\n2. Use `ggplot()` with `geom_line()`\n3. Map year to x-axis, lifeExp to y-axis, and country to color\n4. Add appropriate labels\n:::\n\n<details>\n<summary>Solution</summary>\n```r\ngapminder %>%\n  filter(country %in% large_african_countries) %>%\n  ggplot(aes(x = year, y = lifeExp, color = country)) +\n  geom_line() +\n  labs(title = \"Life Expectancy Over Time\",\n       subtitle = \"African countries with population > 30 million in 2007\",\n       x = \"Year\",\n       y = \"Life Expectancy (years)\",\n       color = \"Country\") +\n  theme_minimal()\n```\n</details>\n\n## Summary\n\nThis quiz covered essential Quarto skills for openwashdata package documentation:\n\n1. **YAML Headers**: Configuring document output formats\n2. **Code Chunks**: Managing code execution and output display\n3. **Data Integration**: Combining narrative text with R analysis\n4. **Visualization**: Creating informative plots within documents\n\nRemember that Quarto documents can be rendered to multiple formats, making them ideal for creating both package documentation and interactive tutorials like this one!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}